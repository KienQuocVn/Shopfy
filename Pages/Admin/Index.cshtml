@page
@model Shofy.Pages.Admin.DashboardModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Phân tích & Thống kê";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Phân tích & Thống kê</h1>
    </div>

    <!-- Thẻ Thống Kê -->
    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="text-muted">Đơn Hàng</h6>
                            <h2>@Model.TotalOrderCount.ToString("N0")</h2>
                            <div class="@(Model.OrderPercentageChange >= 0 ? "text-success" : "text-danger")">
                            </div>
                        </div>
                        <div class="stat-icon bg-light">
                            <i class="bi bi-shop text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="text-muted">Tài Khoản</h6>
                            <h2>@Model.TotalUserCount.ToString("N0")</h2>
                            <div class="@(Model.UserPercentageChange >= 0 ? "text-success" : "text-danger")">
                            </div>
                        </div>
                        <div class="stat-icon bg-light">
                            <i class="bi bi-people text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="text-muted">Doanh Thu Tháng</h6>
                            <h2>@Model.TotalMonthlyRevenue.ToString("#,##0.## ₫",
                                                                System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h2>
                            <div class="@(Model.RevenuePercentageChange >= 0 ? "text-success" : "text-danger")">
                            </div>
                        </div>
                        <div class="stat-icon bg-light">
                            <i class="bi bi-currency-dollar text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="text-muted">Sản Phẩm Đã Bán</h6>
                            <h2>@Model.TotalProductsSold.ToString("N0")</h2>
                            <div class="@(Model.ProductsSoldPercentageChange >= 0 ? "text-success" : "text-danger")">
                            </div>
                        </div>
                        <div class="stat-icon bg-light">
                            <i class="bi bi-box text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu Đồ -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title">Thống Kê Đơn Hàng</h5>
                        <button id="toggleOrderChart" class="btn btn-link"><i
                                class="bi bi-three-dots-vertical"></i></button>
                    </div>
                    <canvas id="orderChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title">Thống Kê Tài Khoản</h5>
                        <button id="toggleUserChart" class="btn btn-link"><i
                                class="bi bi-three-dots-vertical"></i></button>
                    </div>
                    <canvas id="userChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title">Doanh Thu Tháng</h5>
                        <button id="toggleRevenueChart" class="btn btn-link"><i
                                class="bi bi-three-dots-vertical"></i></button>
                    </div>
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title">Sản Phẩm Đã Bán</h5>
                        <button id="toggleProductChart" class="btn btn-link"><i
                                class="bi bi-three-dots-vertical"></i></button>
                    </div>
                    <canvas id="productChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const months = ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'];

    // Biểu Đồ Thống Kê Đơn Hàng (Cột/Dòng Chuyển Đổi)
    let orderChart = new Chart(document.getElementById('orderChart'), {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Tổng Đơn Hàng',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderCounts)),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    document.getElementById('toggleOrderChart').addEventListener('click', function () {
        orderChart.config.type = orderChart.config.type === 'bar' ? 'line' : 'bar';
        orderChart.update();
    });

    // Biểu Đồ Thống Kê Tài Khoản (Cột/Dòng Chuyển Đổi)
    let userChart = new Chart(document.getElementById('userChart'), {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                label: 'Tổng Tài Khoản',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.UserCounts)),
                fill: false,
                borderColor: 'rgba(75, 192, 192, 1)',
                tension: 0.1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    document.getElementById('toggleUserChart').addEventListener('click', function () {
        userChart.config.type = userChart.config.type === 'bar' ? 'line' : 'bar';
        userChart.update();
    });

    // Biểu Đồ Thống Kê Doanh Thu (Cột/Dòng Chuyển Đổi)
    let revenueChart = new Chart(document.getElementById('revenueChart'), {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Doanh Thu (₫)',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.RevenuePerMonth)),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    document.getElementById('toggleRevenueChart').addEventListener('click', function () {
        revenueChart.config.type = revenueChart.config.type === 'bar' ? 'line' : 'bar';
        revenueChart.update();
    });

    // Biểu Đồ Thống Kê Sản Phẩm Đã Bán (Cột/Dòng Chuyển Đổi)
    let productChart = new Chart(document.getElementById('productChart'), {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                label: 'Số Lượng Đã Bán',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductQuantityPerMonth)),
                borderColor: 'rgba(255, 206, 86, 1)',
                fill: false,
                tension: 0.2
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    document.getElementById('toggleProductChart').addEventListener('click', function () {
        productChart.config.type = productChart.config.type === 'bar' ? 'line' : 'bar';
        productChart.update();
    });
</script>