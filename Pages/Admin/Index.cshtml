@page
@model Shofy.Pages.Admin.DashboardModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard";
}


<div class="wrapper">
    <!-- Sidebar -->
    <nav id="sidebar" class="bg-dark text-white">
        <div class="sidebar-header">
            <a href="/Index" class="text-light">
                <h3 class="mb-0">SHOPFY</h3>
            </a>
        </div>
        <div class="navigation-section">
            <p class="text-muted pt-4 pb-2 fw-bold" style="margin-left: 10px;">NAVIGATION</p>
            <ul class="list-unstyled">
                <li class="active"><a href="/Admin/Index" class="fw-bold"><i class="bi bi-house me-2"></i> Analytics</a>
                </li>
                <li><a href="/Admin/User"><i class="bi bi-people me-2"></i> User</a></li>
                <li><a href="/Admin/Products"><i class="bi bi-grid-fill me-2"></i> Products</a></li>
                <li><a href="/Admin/Order"><i class="bi bi-shop me-2"></i> Orders</a></li>
                <li><a href="#"><i class="bi bi-wallet me-2"></i></i> E-Wallet</a></li>
            </ul>
        </div>
        <div class="apps-section" >
                <p class="text-muted ps-3 pt-4 pb-2 mb-0 fw-bold" style="margin-left: 10px;">APPS</p>
                <ul class="list-unstyled">
                    <li><a href="/Admin/Chat"><i class="bi bi-chat-left-dots me-2"></i> Chat</a></li>
                    <li><a href="#"><i class="bi bi-calendar me-2"></i> Calender</a></li>
                    <li><a href="#"><i class="bi bi-envelope me-2"></i> Email</a></li>
                </ul>
            </div>
    </nav>

    <!-- Main Content -->
    <div id="content">
        <!-- Top Navigation -->
        <nav class="navbar navbar-expand-lg navbar-light bg-white">
            <div class="container-fluid">
                <button type="button" id="sidebarCollapse" class="btn">
                    <i class="bi bi-list"></i>
                </button>

                <div class="search-box">
                    <input type="text" class="form-control" placeholder="Search...">
                    <button class="btn btn-primary">Search</button>
                </div>

                <div class="d-flex align-items-center">

                    <div class="icons-group">
                        <button class="btn"><i class="bi bi-bell"></i></button>
                        <button class="btn"><i class="bi bi-grid-fill"></i></button>
                        <button class="btn"><i class="bi bi-gear"></i></button>
                        <button class="btn"><i class="bi bi-moon"></i></button>
                        <button class="btn"><i class="bi bi-fullscreen"></i></button>
                    </div>
                    <div class="profile-section ms-3">
                        <img src="@Model.Avatar" class="rounded-circle" alt="Profile"
                            style="width: 40px; height: 40px;">
                        <div class="d-flex flex-column">
                            <span class="ms-2">@Model.Username</span>
                            <small class="text-muted">Role: @Model.Role</small>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Dashboard Content -->
        <div class="container-fluid py-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">Dashboard</h1>
                <div class="date-section">
                    <div class="btn-group ms-3">
                        <input type="date" class="form-control" id="datePicker" placeholder="Select Date">
                        <button class="btn ms-2" style="background-color: #6658dd;"><i
                                class="bi bi-arrow-repeat text-light"></i></button>
                        <button class="btn ms-2" style="background-color: #6658dd;"><i
                                class="bi bi-funnel-fill text-light"></i></button>
                    </div>
                </div>
            </div>

            <!-- Stats Cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="text-muted">Orders</h6>
                                    <h2>@Model.TotalOrderCount.ToString("N0")</h2>
                                    <div class="@(Model.OrderPercentageChange >= 0 ? "text-success" : "text-danger")">
                                        <i class="bi bi-shop @(Model.OrderPercentageChange >= 0 ? "up" : "down")"></i>
                                        @Math.Abs(Model.OrderPercentageChange).ToString("F2")%
                                        <span class="text-muted">Since last month</span>
                                    </div>
                                </div>
                                <div class="stat-icon bg-light">
                                    <i class="bi bi-shop text-primary"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="text-muted">Accounts</h6>
                                    <h2>@Model.TotalUserCount.ToString("N0")</h2>
                                    <div class="@(Model.UserPercentageChange >= 0 ? "text-success" : "text-danger")">
                                        <i class="bi bi-people @(Model.UserPercentageChange >= 0 ? "up" : "down")"></i>
                                        @Math.Abs(Model.UserPercentageChange).ToString("F2")%
                                        <span class="text-muted">Since last month</span>
                                    </div>
                                </div>
                                <div class="stat-icon bg-light">
                                    <i class="bi bi-people text-primary"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="text-muted">Monthly Revenue</h6>
                                    <h2>@Model.TotalMonthlyRevenue.ToString("C0")</h2>
                                    <div class="@(Model.RevenuePercentageChange >= 0 ? "text-success" : "text-danger")">
                                        <i
                                            class="bi bi-currency-dollar @(Model.RevenuePercentageChange >= 0 ? "up" : "down")"></i>
                                        @Math.Abs(Model.RevenuePercentageChange).ToString("F2")%
                                        <span class="text-muted">Since last month</span>
                                    </div>
                                </div>
                                <div class="stat-icon bg-light">
                                    <i class="bi bi-currency-dollar text-primary"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h6 class="text-muted">Products Sold</h6>
                                    <h2>@Model.TotalProductsSold.ToString("N0")</h2>
                                    <div
                                        class="@(Model.ProductsSoldPercentageChange >= 0 ? "text-success" : "text-danger")">
                                        <i
                                            class="bi bi-box @(Model.ProductsSoldPercentageChange >= 0 ? "up" : "down")"></i>
                                        @Math.Abs(Model.ProductsSoldPercentageChange).ToString("F2")%
                                        <span class="text-muted">Since last month</span>
                                    </div>
                                </div>
                                <div class="stat-icon bg-light">
                                    <i class="bi bi-box text-primary"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Section -->
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h5 class="card-title">Order Statistics</h5>
                                <button class="btn btn-link"><i class="bi bi-three-dots-vertical"></i></button>
                            </div>
                            <canvas id="orderChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h5 class="card-title">User Statistics</h5>
                                <button class="btn btn-link"><i class="bi bi-three-dots-vertical"></i></button>
                            </div>
                            <canvas id="userChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h5 class="card-title">Monthly Revenue</h5>
                                <button class="btn btn-link"><i class="bi bi-three-dots-vertical"></i></button>
                            </div>
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h5 class="card-title">Products Sold</h5>
                                <button class="btn btn-link"><i class="bi bi-three-dots-vertical"></i></button>
                            </div>
                            <canvas id="productChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

    //Quản lý đơn hàng
    new Chart(document.getElementById('orderChart'), {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Total Orders',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderCounts)),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    // Quản lý người dùng
    new Chart(document.getElementById('userChart'), {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                label: 'Total Users',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.UserCounts)),
                fill: false,
                borderColor: 'rgba(75, 192, 192, 1)',
                tension: 0.1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    // Quản lý doanh thu trong tháng
    new Chart(document.getElementById('revenueChart'), {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Revenue ($)',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.RevenuePerMonth)),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });

    // Quản lý số lượng người dùng truy cập trong tháng
    new Chart(document.getElementById('productChart'), {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                label: 'Quantity Sold',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductQuantityPerMonth)),
                borderColor: 'rgba(255, 206, 86, 1)',
                fill: false,
                tension: 0.2
            }]
        },
        options: { scales: { y: { beginAtZero: true } } }
    });
</script>